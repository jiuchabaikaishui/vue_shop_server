{"version":3,"file":"js/cate_params.60f3436f.js","mappings":"4JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,gBAAgB,CAACE,MAAM,CAAC,kBAAkB,wBAAwB,CAACF,EAAG,qBAAqB,CAACE,MAAM,CAAC,GAAK,CAAEC,KAAM,mBAAoB,CAACL,EAAIM,GAAG,QAAQJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,UAAUJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,WAAW,GAAGJ,EAAG,UAAU,CAACA,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWG,GAAG,CAAC,MAAQP,EAAIQ,oBAAoB,CAACR,EAAIM,GAAG,UAAUJ,EAAG,aAAa,CAACO,YAAY,aAAaL,MAAM,CAAC,KAAOJ,EAAIU,SAAS,QAAUV,EAAIW,QAAQ,kBAAiB,EAAM,eAAc,EAAM,cAAa,EAAK,aAAa,IAAI,OAAS,GAAG,kBAAiB,GAAOC,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,OAAOC,GAAG,SAASC,GAAO,MAAO,CAAEA,EAAMC,IAAIC,YAAahB,EAAG,IAAI,CAACO,YAAY,gBAAgBU,YAAY,CAAC,MAAQ,SAASjB,EAAG,IAAI,CAACO,YAAY,kBAAkBU,YAAY,CAAC,MAAQ,gBAAgB,GAAG,CAACL,IAAI,QAAQC,GAAG,SAASC,GAAO,MAAO,CAA0B,IAAxBA,EAAMC,IAAIG,UAAiBlB,EAAG,SAAS,CAACF,EAAIM,GAAG,QAAiC,IAAxBU,EAAMC,IAAIG,UAAiBlB,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,YAAY,CAACJ,EAAIM,GAAG,QAAQJ,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,YAAY,CAACJ,EAAIM,GAAG,QAAQ,GAAG,CAACQ,IAAI,MAAMC,GAAG,SAASC,GAAO,MAAO,CAACd,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,UAAU,KAAO,eAAe,KAAO,SAAS,CAACJ,EAAIM,GAAG,QAAQJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIsB,eAAeN,EAAMC,IAAIM,OAAO,IAAI,CAACvB,EAAIM,GAAG,QAAQ,OAAOJ,EAAG,gBAAgB,CAACE,MAAM,CAAC,eAAeJ,EAAIwB,UAAUC,QAAQ,aAAa,CAAC,EAAG,EAAG,EAAG,IAAI,YAAYzB,EAAIwB,UAAUE,SAAS,OAAS,0CAA0C,MAAQ1B,EAAI2B,OAAOpB,GAAG,CAAC,cAAcP,EAAI4B,iBAAiB,iBAAiB5B,EAAI6B,wBAAwB,GAAG3B,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,SAAS,QAAUJ,EAAI8B,qBAAqB,MAAQ,OAAOvB,GAAG,CAAC,iBAAiB,SAASc,GAAQrB,EAAI8B,qBAAqBT,CAAM,EAAE,MAAQrB,EAAI+B,sBAAsB,CAAC7B,EAAG,UAAU,CAAC8B,IAAI,iBAAiB5B,MAAM,CAAC,MAAQJ,EAAIiC,YAAY,MAAQjC,EAAIkC,iBAAiB,cAAc,UAAU,CAAChC,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,QAAQ,KAAO,aAAa,CAACF,EAAG,WAAW,CAACiC,MAAM,CAACC,MAAOpC,EAAIiC,YAAYI,SAAUC,SAAS,SAAUC,GAAMvC,EAAIwC,KAAKxC,EAAIiC,YAAa,WAAYM,EAAI,EAAEE,WAAW,2BAA2B,GAAGvC,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,UAAU,CAACF,EAAG,cAAc,CAACE,MAAM,CAAC,QAAUJ,EAAI0C,eAAe,MAAQ1C,EAAI2C,cAAc,UAAY,IAAIpC,GAAG,CAAC,OAASP,EAAI4C,kBAAkBT,MAAM,CAACC,MAAOpC,EAAI6C,aAAcP,SAAS,SAAUC,GAAMvC,EAAI6C,aAAaN,CAAG,EAAEE,WAAW,mBAAmB,IAAI,GAAGvC,EAAG,OAAO,CAACO,YAAY,gBAAgBL,MAAM,CAAC,KAAO,UAAU0C,KAAK,UAAU,CAAC5C,EAAG,YAAY,CAACK,GAAG,CAAC,MAAQ,SAASc,GAAQrB,EAAI8B,sBAAuB,CAAK,IAAI,CAAC9B,EAAIM,GAAG,SAASJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWG,GAAG,CAAC,MAAQP,EAAI+C,UAAU,CAAC/C,EAAIM,GAAG,UAAU,IAAI,IAAI,EACxuF,EACI0C,EAAkB,GCyEtB,GACAC,IAAAA,GACA,OACAvC,SAAA,GACAc,UAAA,CACA0B,KAAA,EACAzB,QAAA,EACAC,SAAA,GAEAC,MAAA,EACAhB,QAAA,CACA,CACAwC,MAAA,OACAC,KAAA,YAEA,CACAD,MAAA,OAEAD,KAAA,WAEAG,SAAA,QAEA,CACAF,MAAA,KACAD,KAAA,WACAG,SAAA,SAEA,CACAF,MAAA,KACAD,KAAA,WACAG,SAAA,QAGAvB,sBAAA,EACAG,YAAA,CACAqB,QAAA,EACAjB,SAAA,GACAjB,UAAA,GAGAc,iBAAA,CACAG,SAAA,CACA,CAAAkB,UAAA,EAAAC,QAAA,UAAAC,QAAA,UAGAf,eAAA,GACAC,cAAA,CACAe,cAAA,QACAC,eAAA,EACAvB,MAAA,SACAe,MAAA,WACAS,SAAA,YAEAf,aAAA,GAEA,EACAgB,OAAAA,GACA,KAAAC,aACA,EACAC,QAAA,CACA,iBAAAD,GACA,MAAAb,KAAAe,SAAA,KAAAC,MAAAC,IAAA,cAAAC,OAAA,KAAA3C,YACA,SAAAwC,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAA9D,SAAAsD,EAAAf,KAAAwB,OACA,KAAA9C,MAAAqC,EAAAf,KAAAtB,MACA,KAAA2C,SAAAI,QAAA,WACA,EACA9C,gBAAAA,CAAA+C,GAEA,KAAAnD,UAAAE,SAAAiD,EACA,MAAAC,EAAAC,SAAA,KAAAlD,MAAA,KAAAH,UAAAE,SAAA,UAAAC,MAAA,KAAAH,UAAAE,SAAA,OACA,KAAAF,UAAAC,QAAA,KAAAD,UAAAC,QAAAmD,EAAAA,EAAA,KAAApD,UAAAC,QACA,KAAAqC,aACA,EACAjC,mBAAAA,CAAAiD,GAEA,KAAAtD,UAAAC,QAAAqD,EACA,KAAAhB,aACA,EAEA,uBAAAtD,GAEA,MAAAyC,KAAAe,SAAA,KAAAC,MAAAC,IAAA,cAAAC,OAAA,CAAAjB,KAAA,KACA,SAAAc,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAG,OACA,KAAA7B,eAAAsB,EAAAf,KACA,KAAAnB,sBAAA,CACA,EAEAC,mBAAAA,GACA,KAAAgD,MAAAC,eAAAC,cACA,KAAAhD,YAAAqB,QAAA,EACA,KAAArB,YAAAb,UAAA,EACA,KAAAa,YAAAI,SAAA,GACA,KAAAQ,aAAA,EACA,EAEA,aAAAE,GAEA,KAAAgC,MAAAG,WAAAC,UAAA,UACA,IAAAC,EAAA,YAAAd,SAAAC,MAAA,cAEA,MAAAtB,KAAAe,SAAA,KAAAC,MAAAoB,KAAA,kBAAApD,aACA,SAAA+B,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,YACA,KAAAZ,cAEA,KAAAhC,sBAAA,IAEA,EACAc,gBAAAA,CAAA0C,GAGA,KAAAzC,aAAA0C,OAAA,GACA,KAAAtD,YAAAqB,QAAA,KAAAT,aAAA,KAAAA,aAAA0C,OAAA,GACA,KAAAtD,YAAAb,UAAA,KAAAyB,aAAA0C,SAEA,KAAAtD,YAAAqB,QAAA,EACA,KAAArB,YAAAb,UAAA,EAEA,EACA,oBAAAE,CAAAkE,GACA,MAAAC,QAAA,KAAAC,SAAA,2BACAC,kBAAA,KACAC,iBAAA,KACA1C,KAAA,YACA2C,OAAAC,GAAAA,IAIA,eAAAL,EAAA,OAEA,MAAAxC,KAAAe,SAAA,KAAAC,MAAA8B,OAAA,cAAAP,GACA,SAAAxB,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,YACA,KAAAlD,UAAAC,QAAA,YAAAf,SAAA6E,SAAA,KAAA/D,UAAAC,SAAA,GACA,KAAAqC,aACA,ICnN4P,I,UCQxPkC,GAAY,OACd,EACAjG,EACAiD,GACA,EACA,KACA,WACA,MAIF,EAAegD,EAAiB,O,oECnBhC,IAAIjG,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,gBAAgB,CAACE,MAAM,CAAC,kBAAkB,wBAAwB,CAACF,EAAG,qBAAqB,CAACE,MAAM,CAAC,GAAK,CAAEC,KAAM,mBAAoB,CAACL,EAAIM,GAAG,QAAQJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,UAAUJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,WAAW,GAAGJ,EAAG,UAAU,CAACA,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,sBAAsB,KAAO,UAAU,YAAY,GAAG,UAAW,KAASF,EAAG,MAAM,CAACO,YAAY,WAAW,CAACP,EAAG,OAAO,CAACF,EAAIM,GAAG,cAAcJ,EAAG,cAAc,CAACE,MAAM,CAAC,QAAUJ,EAAIiG,SAAS,MAAQjG,EAAIkG,UAAU,UAAY,IAAI3F,GAAG,CAAC,OAASP,EAAImG,cAAchE,MAAM,CAACC,MAAOpC,EAAIoG,iBAAkB9D,SAAS,SAAUC,GAAMvC,EAAIoG,iBAAiB7D,CAAG,EAAEE,WAAW,uBAAuB,GAAGvC,EAAG,UAAU,CAACK,GAAG,CAAC,YAAYP,EAAIqG,gBAAgBlE,MAAM,CAACC,MAAOpC,EAAIsG,WAAYhE,SAAS,SAAUC,GAAMvC,EAAIsG,WAAW/D,CAAG,EAAEE,WAAW,eAAe,CAACvC,EAAG,cAAc,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,SAAS,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,UAAU,KAAO,OAAO,SAAyC,IAA9BJ,EAAIoG,iBAAiBb,QAAYhF,GAAG,CAAC,MAAQ,SAASc,GAAQrB,EAAIuG,kBAAmB,CAAI,IAAI,CAACvG,EAAIM,GAAG,UAAUJ,EAAG,WAAW,CAACiB,YAAY,CAAC,MAAQ,QAAQf,MAAM,CAAC,KAAOJ,EAAIwG,cAAc,OAAS,GAAG,OAAS,KAAK,CAACtG,EAAG,kBAAkB,CAACE,MAAM,CAAC,KAAO,UAAUQ,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAAChB,EAAIyG,GAAIzF,EAAMC,IAAIyF,WAAW,SAASpB,EAAEqB,GAAG,OAAOzG,EAAG,SAAS,CAACY,IAAI6F,EAAEvG,MAAM,CAAC,SAAW,IAAIG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAI4G,YAAY5F,EAAMC,IAAK0F,EAAE,IAAI,CAAC3G,EAAIM,GAAGN,EAAI6G,GAAGvB,KAAK,IAAItE,EAAMC,IAAI6F,aAAc5G,EAAG,WAAW,CAAC8B,IAAI,eAAevB,YAAY,gBAAgBL,MAAM,CAAC,KAAO,SAASG,GAAG,CAAC,KAAO,SAASc,GAAQ,OAAOrB,EAAI+G,mBAAmB/F,EAAMC,IAAI,GAAG+F,SAAS,CAAC,MAAQ,SAAS3F,GAAQ,OAAIA,EAAO6B,KAAK+D,QAAQ,QAAQjH,EAAIkH,GAAG7F,EAAO8F,QAAQ,QAAQ,GAAG9F,EAAOP,IAAI,SAAgB,KAAYd,EAAI+G,mBAAmB/F,EAAMC,IAAI,GAAGkB,MAAM,CAACC,MAAOpB,EAAMC,IAAImG,WAAY9E,SAAS,SAAUC,GAAMvC,EAAIwC,KAAKxB,EAAMC,IAAK,aAAcsB,EAAI,EAAEE,WAAW,0BAA0BvC,EAAG,YAAY,CAACO,YAAY,iBAAiBL,MAAM,CAAC,KAAO,SAASG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIqH,UAAUrG,EAAMC,IAAI,IAAI,CAACjB,EAAIM,GAAG,eAAe,OAAOJ,EAAG,kBAAkB,CAACE,MAAM,CAAC,KAAO,QAAQ,MAAQ,OAAOF,EAAG,kBAAkB,CAACE,MAAM,CAAC,KAAO,YAAY,MAAQ,UAAUF,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,MAAMQ,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAACd,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,UAAU,KAAO,eAAe,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIsH,eAAetG,EAAMC,IAAIsG,QAAQ,IAAI,CAACvH,EAAIM,GAAG,QAAQJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIwH,aAAaxG,EAAMC,IAAIsG,QAAQ,IAAI,CAACvH,EAAIM,GAAG,QAAQ,QAAQ,IAAI,GAAGJ,EAAG,cAAc,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,SAAS,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,UAAU,KAAO,OAAO,SAAyC,IAA9BJ,EAAIoG,iBAAiBb,QAAYhF,GAAG,CAAC,MAAQ,SAASc,GAAQrB,EAAIuG,kBAAmB,CAAI,IAAI,CAACvG,EAAIM,GAAG,UAAUJ,EAAG,WAAW,CAACiB,YAAY,CAAC,MAAQ,QAAQf,MAAM,CAAC,KAAOJ,EAAIyH,cAAc,OAAS,GAAG,OAAS,KAAK,CAACvH,EAAG,kBAAkB,CAACE,MAAM,CAAC,KAAO,UAAUQ,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAAChB,EAAIyG,GAAIzF,EAAMC,IAAIyF,WAAW,SAASpB,EAAEqB,GAAG,OAAOzG,EAAG,SAAS,CAACY,IAAI6F,EAAEvG,MAAM,CAAC,SAAW,IAAIG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAI4G,YAAY5F,EAAMC,IAAK0F,EAAE,IAAI,CAAC3G,EAAIM,GAAGN,EAAI6G,GAAGvB,KAAK,IAAItE,EAAMC,IAAI6F,aAAc5G,EAAG,WAAW,CAAC8B,IAAI,eAAevB,YAAY,gBAAgBL,MAAM,CAAC,KAAO,SAASG,GAAG,CAAC,KAAO,SAASc,GAAQ,OAAOrB,EAAI+G,mBAAmB/F,EAAMC,IAAI,GAAG+F,SAAS,CAAC,MAAQ,SAAS3F,GAAQ,OAAIA,EAAO6B,KAAK+D,QAAQ,QAAQjH,EAAIkH,GAAG7F,EAAO8F,QAAQ,QAAQ,GAAG9F,EAAOP,IAAI,SAAgB,KAAYd,EAAI+G,mBAAmB/F,EAAMC,IAAI,GAAGkB,MAAM,CAACC,MAAOpB,EAAMC,IAAImG,WAAY9E,SAAS,SAAUC,GAAMvC,EAAIwC,KAAKxB,EAAMC,IAAK,aAAcsB,EAAI,EAAEE,WAAW,0BAA0BvC,EAAG,YAAY,CAACO,YAAY,iBAAiBL,MAAM,CAAC,KAAO,SAASG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIqH,UAAUrG,EAAMC,IAAI,IAAI,CAACjB,EAAIM,GAAG,eAAe,OAAOJ,EAAG,kBAAkB,CAACE,MAAM,CAAC,KAAO,QAAQ,MAAQ,OAAOF,EAAG,kBAAkB,CAACE,MAAM,CAAC,KAAO,YAAY,MAAQ,UAAUF,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,MAAMQ,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAACd,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,UAAU,KAAO,eAAe,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIsH,eAAetG,EAAMC,IAAIsG,QAAQ,IAAI,CAACvH,EAAIM,GAAG,QAAQJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOrB,EAAIwH,aAAaxG,EAAMC,IAAIsG,QAAQ,IAAI,CAACvH,EAAIM,GAAG,QAAQ,QAAQ,IAAI,IAAI,IAAI,GAAGJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,KAAOJ,EAAI0H,UAAU,QAAU1H,EAAIuG,iBAAiB,MAAQ,OAAOhG,GAAG,CAAC,iBAAiB,SAASc,GAAQrB,EAAIuG,iBAAiBlF,CAAM,EAAE,MAAQrB,EAAI2H,kBAAkB,CAACzH,EAAG,UAAU,CAAC8B,IAAI,aAAa5B,MAAM,CAAC,MAAQJ,EAAI4H,QAAQ,MAAQ5H,EAAI6H,aAAa,cAAc,UAAU,CAAC3H,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQJ,EAAI0H,UAAU,KAAO,cAAc,CAACxH,EAAG,WAAW,CAACiC,MAAM,CAACC,MAAOpC,EAAI4H,QAAQE,UAAWxF,SAAS,SAAUC,GAAMvC,EAAIwC,KAAKxC,EAAI4H,QAAS,YAAarF,EAAI,EAAEE,WAAW,wBAAwB,IAAI,GAAGvC,EAAG,OAAO,CAACO,YAAY,gBAAgBL,MAAM,CAAC,KAAO,UAAU0C,KAAK,UAAU,CAAC5C,EAAG,YAAY,CAACK,GAAG,CAAC,MAAQ,SAASc,GAAQrB,EAAIuG,kBAAmB,CAAK,IAAI,CAACvG,EAAIM,GAAG,SAASJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWG,GAAG,CAAC,MAAQP,EAAI+H,YAAY,CAAC/H,EAAIM,GAAG,UAAU,IAAI,GAAGJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,KAAOJ,EAAI0H,UAAU,QAAU1H,EAAIgI,kBAAkB,MAAQ,OAAOzH,GAAG,CAAC,iBAAiB,SAASc,GAAQrB,EAAIgI,kBAAkB3G,CAAM,EAAE,MAAQrB,EAAIiI,mBAAmB,CAAC/H,EAAG,UAAU,CAAC8B,IAAI,cAAc5B,MAAM,CAAC,MAAQJ,EAAIkI,SAAS,MAAQlI,EAAImI,cAAc,cAAc,UAAU,CAACjI,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQJ,EAAI0H,UAAU,KAAO,cAAc,CAACxH,EAAG,WAAW,CAACiC,MAAM,CAACC,MAAOpC,EAAIkI,SAASJ,UAAWxF,SAAS,SAAUC,GAAMvC,EAAIwC,KAAKxC,EAAIkI,SAAU,YAAa3F,EAAI,EAAEE,WAAW,yBAAyB,IAAI,GAAGvC,EAAG,OAAO,CAACO,YAAY,gBAAgBL,MAAM,CAAC,KAAO,UAAU0C,KAAK,UAAU,CAAC5C,EAAG,YAAY,CAACK,GAAG,CAAC,MAAQ,SAASc,GAAQrB,EAAIgI,mBAAoB,CAAK,IAAI,CAAChI,EAAIM,GAAG,SAASJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWG,GAAG,CAAC,MAAQP,EAAIoI,aAAa,CAACpI,EAAIM,GAAG,UAAU,IAAI,IAAI,EACzmM,EACI0C,EAAkB,GC8FtB,GACAC,IAAAA,GACA,OACAgD,SAAA,GACAG,iBAAA,GACAF,UAAA,CACAxC,cAAA,QACAtB,MAAA,SACAe,MAAA,WACAS,SAAA,YAGA0C,WAAA,OAEAE,cAAA,GAEAiB,cAAA,GAEAlB,kBAAA,EAEAqB,QAAA,CACAE,UAAA,IAGAD,aAAA,CACAC,UAAA,CACA,CAAAvE,UAAA,EAAAC,QAAA,UAAAC,QAAA,UAIAuE,mBAAA,EAEAE,SAAA,CACAJ,UAAA,IAGAK,cAAA,CACAL,UAAA,CACA,CAAAvE,UAAA,EAAAC,QAAA,UAAAC,QAAA,UAIA,EACAI,OAAAA,GACA,KAAAC,aACA,EACAC,QAAA,CAEA,iBAAAD,GACA,MAAAb,KAAAe,SAAA,KAAAC,MAAAC,IAAA,cAAAC,OAAA,CAAAjB,KAAA,KACA,SAAAc,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,YACA,KAAAuB,SAAAjC,EAAAf,IACA,EAEA,mBAAAoF,GACA,MAAApF,KAAAe,SAAA,KAAAC,MAAAC,IAAA,mBAAAoE,oBAAA,CAAAnE,OAAA,CAAAoE,IAAA,KAAAjC,cACA,SAAAtC,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,YAEAV,EAAAf,KAAAuF,SAAAC,IACAA,EAAA/B,UAAA+B,EAAA/B,UAAA+B,EAAA/B,UAAAgC,MAAA,QACAD,EAAA3B,cAAA,EACA2B,EAAArB,WAAA,MAEA,cAAAd,aAAA,KAAAE,cAAAxC,EAAAf,MACA,KAAAwE,cAAAzD,EAAAf,IACA,EAEAkD,YAAAA,GACA,YAAAC,iBAAAb,OAIA,OAHA,KAAAa,iBAAA,GACA,KAAAI,cAAA,QACA,KAAAiB,cAAA,IAKA,KAAAY,eACA,EAEAhC,cAAAA,GACA,SAAAD,iBAAAb,QAAA,KAAA8C,eACA,EAEAV,eAAAA,GACA,KAAA5C,MAAAG,WAAAD,aACA,EAEA8C,SAAAA,GAEA,KAAAhD,MAAAG,WAAAC,UAAA,UACA,IAAAC,EAAA,YAAAd,SAAAC,MAAA,cAEA,MAAAtB,KAAAe,SAAA,KAAAC,MAAAoB,KAAA,mBAAAiD,oBAAA,CACAR,UAAA,KAAAF,QAAAE,UACAa,SAAA,KAAArC,aAEA,SAAAtC,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,UAAAgD,eACA,KAAAnB,kBAAA,EACA,KAAA8B,eAAA,GAEA,EAEA,oBAAAf,CAAAsB,GACA,MAAA3F,KAAAe,SAAA,KAAAC,MAAAC,IAAA,mBAAAoE,qBAAAM,IAAA,CAAAzE,OAAA,CAAAwE,SAAA,KAAArC,cACA,SAAAtC,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,UAAAgD,eACA,KAAAQ,SAAAlE,EAAAf,KACA,KAAA+E,mBAAA,CACA,EAEAC,gBAAAA,GACA,KAAAlD,MAAA8D,YAAA5D,aACA,EAEAmD,UAAAA,GAEA,KAAArD,MAAA8D,YAAA1D,UAAA,UACA,IAAAC,EAAA,YAAAd,SAAAC,MAAA,cAEA,MAAAtB,KAAAe,SAAA,KAAAC,MAAA6E,IAAA,mBAAAR,qBAAA,KAAAJ,SAAAX,UAAA,CACAO,UAAA,KAAAI,SAAAJ,UACAa,SAAA,KAAArC,aAEA,SAAAtC,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,UAAAgD,eACA,KAAAM,mBAAA,EACA,KAAAK,eAAA,GAEA,EAEA,kBAAAb,CAAAoB,GACA,MAAAnD,QAAA,KAAAC,SAAA,iBAAAgC,mBAAA,MACA/B,kBAAA,KACAC,iBAAA,KACA1C,KAAA,YACA2C,OAAAC,GAAAA,IAIA,eAAAL,EAAA,OAEA,MAAAxC,KAAAe,SAAA,KAAAC,MAAA8B,OAAA,mBAAAuC,qBAAAM,KACA,SAAA5E,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,UAAAgD,eACA,KAAAW,eACA,EAEA,kBAAAU,CAAA9H,EAAA+H,EAAAC,GACA,MAAAhG,KAAAe,SAAA,KAAAC,MAAA6E,IAAA,mBAAAR,qBAAArH,EAAAsG,UAAA,CACAO,UAAA7G,EAAA6G,UACAa,SAAA,KAAArC,WACAI,UAAAsC,IAEA,SAAAhF,EAAAI,KAAAC,OAAA,YAAAC,SAAAC,MAAAP,EAAAI,KAAAI,KACA,KAAAF,SAAAI,QAAA,GAAAuE,EAAA,iBAAAvB,kBACA,KAAAW,eACA,EAEAzB,WAAAA,CAAA3F,EAAA0F,GAEA,MAAAqC,EAAA,IAAA/H,EAAAyF,UAAAwC,MAAA,EAAAvC,MAAA1F,EAAAyF,UAAAwC,MAAAvC,EAAA,IAAAwC,KAAA,KAEA,KAAAJ,aAAA9H,EAAA+H,GAAA,EACA,EAEA3B,SAAAA,CAAApG,GACAA,EAAA6F,cAAA,EAGA,KAAAsC,WAAAC,IACA,KAAAtE,MAAAuE,aAAAvE,MAAAwE,MAAAC,OAAA,GAEA,EAEAzC,kBAAAA,CAAA9F,GACA,OAAAA,EAAAmG,WAAAqC,OAAAlE,OAGA,OAFAtE,EAAA6F,cAAA,OACA7F,EAAAmG,WAAA,IAKA,MAAA4B,EAAA/H,EAAAyF,UAAAgD,OAAAzI,EAAAmG,WAAAqC,QAAAN,KAAA,KAEA,KAAAJ,aAAA9H,EAAA+H,GAAA,EACA,GAGAW,SAAA,CAEArB,MAAAA,GACA,gBAAAlC,iBAAAb,OAAA,KAAAa,iBAAA,GACA,IACA,EAEAsB,SAAAA,GACA,oBAAApB,WACA,OAEA,MACA,IC3S8P,I,UCQ1PN,GAAY,OACd,EACAjG,EACAiD,GACA,EACA,KACA,WACA,MAIF,EAAegD,EAAiB,O","sources":["webpack://vue_shop/./src/components/goods/Cate.vue","webpack://vue_shop/src/components/goods/Cate.vue","webpack://vue_shop/./src/components/goods/Cate.vue?f02a","webpack://vue_shop/./src/components/goods/Cate.vue?980e","webpack://vue_shop/./src/components/goods/Params.vue","webpack://vue_shop/src/components/goods/Params.vue","webpack://vue_shop/./src/components/goods/Params.vue?c55f","webpack://vue_shop/./src/components/goods/Params.vue?9d3d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home/welcome' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加分类\")]),_c('tree-table',{staticClass:\"tree-table\",attrs:{\"data\":_vm.catelist,\"columns\":_vm.columns,\"selection-type\":false,\"expand-type\":false,\"show-index\":true,\"index-text\":'#',\"border\":\"\",\"show-row-hover\":false},scopedSlots:_vm._u([{key:\"isOk\",fn:function(scope){return [(scope.row.cat_deleted)?_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}}):_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"三级\")])]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeCateById(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[2, 3, 5, 10],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加商品分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称：\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类：\"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"clearable\":\"\"},on:{\"change\":_vm.parentCateChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <!-- 面包屑导航 -->\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n            <el-breadcrumb-item :to=\"{ path: '/home/welcome' }\">首页</el-breadcrumb-item>\n            <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n            <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n        </el-breadcrumb>\n\n        <!-- 卡片 -->\n        <el-card>\n            <!-- 添加 -->\n            <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n\n            <!-- 分类列表 -->\n            <tree-table class=\"tree-table\" :data=\"catelist\" :columns=\"columns\" :selection-type = \"false\" :expand-type=\"false\" :show-index=\"true\" :index-text=\"'#'\" border :show-row-hover=\"false\">\n                <template slot=\"isOk\" slot-scope=\"scope\">\n                    <i class=\"el-icon-error\" style=\"color: red;\" v-if=\"scope.row.cat_deleted\"></i>\n                    <i class=\"el-icon-success\" style=\"color: lightgreen;\" v-else></i>\n                </template>\n                <template slot=\"order\" slot-scope=\"scope\">\n                    <el-tag v-if=\"scope.row.cat_level === 0\">一级</el-tag>\n                    <el-tag type=\"success\" v-else-if=\"scope.row.cat_level === 1\">二级</el-tag>\n                    <el-tag type=\"warning\" v-else>三级</el-tag>\n                </template>\n                <template slot=\"opt\" slot-scope=\"scope\">\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeCateById(scope.row.cat_id)\">删除</el-button>\n                </template>\n            </tree-table>\n\n            <!-- <el-table :data=\"catelist\" style=\"width: 100%\" border stripe>\n                <el-table-column type=\"index\" label=\"#\"></el-table-column>\n                <el-table-column prop=\"cat_name\" label=\"分类名称\"></el-table-column>\n                <el-table-column label=\"是否有效\"></el-table-column>\n                <el-table-column label=\"排序\"></el-table-column>\n                <el-table-column label=\"操作\">\n                    <template>\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"></el-button>\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\n                    </template>\n                </el-table-column>\n            </el-table> -->\n\n            <!-- 分页 -->\n            <el-pagination\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"queryInfo.pagenum\"\n            :page-sizes=\"[2, 3, 5, 10]\"\n            :page-size=\"queryInfo.pagesize\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\">\n            </el-pagination>\n        </el-card>\n\n        <!-- 添加分类对话框 -->\n        <el-dialog title=\"添加商品分类\" :visible.sync=\"addCateDialogVisible\" width=\"50%\" @close=\"addCateDialogClosed\">\n            <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\n                <el-form-item label=\"分类名称：\" prop=\"cat_name\">\n                    <el-input v-model=\"addCateForm.cat_name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"父级分类：\">\n                    <el-cascader v-model=\"selectedKeys\" :options=\"parentCateList\" :props=\"cascaderProps\" @change=\"parentCateChange\" clearable></el-cascader>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            catelist: [], \n            queryInfo: {\n                type: 3,\n                pagenum: 1,\n                pagesize: 5\n            },\n            total: 0,\n            columns: [\n                {\n                    label: '分类名称',\n                    prop: 'cat_name'\n                },\n                {\n                    label: '是否有效',\n                    // 列类型，可选值有 'template'(自定义列模板)\n                    type: 'template',\n                    // 列类型为 'template'(自定义列模板) 时，对应的作用域插槽（它可以获取到 row, rowIndex, column, columnIndex）名称\n                    template: 'isOk'\n                },\n                {\n                    label: '排序',\n                    type: 'template',\n                    template: 'order'\n                },\n                {\n                    label: '操作',\n                    type: 'template',\n                    template: 'opt'\n                }\n            ],\n            addCateDialogVisible: false,\n            addCateForm: {\n                cat_pid: 0,\n                cat_name: '',\n                cat_level: 0\n            },\n            // 添加商品分类表单验证\n            addCateFormRules: {\n                cat_name: [\n                    { required: true, message: '请输入分类名称', trigger: 'blur' }\n                ]\n            },\n            parentCateList: [],\n            cascaderProps: {\n                expandTrigger: 'hover',\n                checkStrictly: true,\n                value: 'cat_id',\n                label: 'cat_name',\n                children: 'children'\n            },\n            selectedKeys: []\n        }\n    },\n    created() {\n        this.getCateList()\n    },\n    methods: {\n        async getCateList() {\n            const { data: res } = await this.$http.get('categories', { params: this.queryInfo })\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.catelist = res.data.result\n            this.total = res.data.total\n            this.$message.success('商品分类获取成功')\n        },\n        handleSizeChange(size) {\n            console.log('size: ', size);\n            this.queryInfo.pagesize = size\n            const maxN = parseInt(this.total / this.queryInfo.pagesize + '') + (this.total % this.queryInfo.pagesize > 0 ? 1 : 0)\n            this.queryInfo.pagenum = this.queryInfo.pagenum > maxN ? maxN : this.queryInfo.pagenum\n            this.getCateList()\n        },\n        handleCurrentChange(page) {\n            console.log('page: ', page);\n            this.queryInfo.pagenum = page\n            this.getCateList()\n        },\n        // 展示添加商品分类对话框\n        async showAddCateDialog() {\n            // 获取父级分类\n            const { data: res } = await this.$http.get('categories', { params: { type: 2 } })\n            if (res.meta.status !== 200) return this.$message.error(res.meta.error)\n            this.parentCateList = res.data\n            this.addCateDialogVisible = true\n        },\n        // 关闭添加商品分类对话框\n        addCateDialogClosed() {\n            this.$refs.addCateFormRef.resetFields()\n            this.addCateForm.cat_pid = 0\n            this.addCateForm.cat_level = 0\n            this.addCateForm.cat_name = ''\n            this.selectedKeys = []\n        },\n        // 添加商品分类\n        async addCate() {\n            // 验证表单\n            this.$refs.addFormRef.validate(async valid => {\n                if (!valid) return this.$message.error('请填写正确的分类名称')\n\n                const { data: res } = await this.$http.post('categories', this.addCateForm)\n                if (res.meta.status !== 201) return this.$message.error(res.meta.msg)\n                this.$message.success('添加商品分类成功')\n                this.getCateList()\n                // 关闭对话框，重置数据\n                this.addCateDialogVisible = false\n            })\n        },\n        parentCateChange(v) {\n            console.log('change: ', v);\n            // 处理父分类id和分类级别\n            if (this.selectedKeys.length > 0) {\n                this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n                this.addCateForm.cat_level = this.selectedKeys.length\n            } else {\n                this.addCateForm.cat_pid = 0\n                this.addCateForm.cat_level = 0\n            }\n        },\n        async removeCateById(uid) {\n            const confirm = await this.$confirm('此操作将永久删除该分类, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(e => e);\n\n            // 如果用户确认删除，则返回值为字符串 confirm；如果用户取消了删除，则返回值为字符串 cancel\n            console.log('confirm: ', confirm);\n            if (confirm !== 'confirm') return\n\n            const { data: res } = await this.$http.delete('categories/' + uid)\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.$message.success('删除商品分类成功')\n            if (this.queryInfo.pagenum > 1 && this.catelist.length === 1) this.queryInfo.pagenum -= 1\n            this.getCateList()\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-cascader {\n    width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=32f3ddf4&scoped=true\"\nimport script from \"./Cate.vue?vue&type=script&lang=js\"\nexport * from \"./Cate.vue?vue&type=script&lang=js\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=32f3ddf4&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"32f3ddf4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home/welcome' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"参数列表\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意：只允许为第三级分类设置相关参数！\",\"type\":\"warning\",\"show-icon\":\"\",\"closable\":false}}),_c('div',{staticClass:\"cat_opt\"},[_c('span',[_vm._v(\"请选择商品分类：\")]),_c('el-cascader',{attrs:{\"options\":_vm.cateList,\"props\":_vm.cateProps,\"clearable\":\"\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateKeys),callback:function ($$v) {_vm.selectedCateKeys=$$v},expression:\"selectedCateKeys\"}})],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.selectedCateKeys.length!==3},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(v,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(scope.row, i)}}},[_vm._v(_vm._s(v))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"prop\":\"attr_name\",\"label\":\"属性名称\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.selectedCateKeys.length!==3},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(v,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(scope.row, i)}}},[_vm._v(_vm._s(v))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"prop\":\"attr_name\",\"label\":\"属性名称\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'编辑' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <!-- 面包屑导航 -->\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n            <el-breadcrumb-item :to=\"{ path: '/home/welcome' }\">首页</el-breadcrumb-item>\n            <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n            <el-breadcrumb-item>参数列表</el-breadcrumb-item>\n        </el-breadcrumb>\n\n        <!-- 卡片 -->\n        <el-card>\n            <el-alert title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" show-icon :closable=\"false\"></el-alert>\n\n            <!-- 商品分类 -->\n            <div class=\"cat_opt\">\n                <span>请选择商品分类：</span>\n                <el-cascader v-model=\"selectedCateKeys\" :options=\"cateList\" :props=\"cateProps\"  @change=\"handleChange\" clearable></el-cascader>\n            </div>\n            \n            <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\n                <el-tab-pane label=\"动态参数\" name=\"many\">\n                    <el-button type=\"primary\" size=\"mini\" :disabled=\"selectedCateKeys.length!==3\" @click=\"addDialogVisible = true\">添加参数</el-button>\n                    <!-- 动态参数列表 -->\n                    <el-table :data=\"manyTableData\" style=\"width: 100%\" border stripe>\n                        <el-table-column type=\"expand\">\n                            <template slot-scope=\"scope\">\n                                <el-tag v-for=\"(v, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(scope.row, i)\">{{v}}</el-tag>\n                                <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\" v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\" @blur=\"handleInputConfirm(scope.row)\">\n                                </el-input>\n                                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\n                            </template>\n                        </el-table-column>\n                        <el-table-column type=\"index\" label=\"#\"></el-table-column>\n                        <el-table-column  prop=\"attr_name\" label=\"属性名称\"></el-table-column>\n                        <el-table-column label=\"操作\">\n                            <template slot-scope=\"scope\">\n                                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\n                                <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n                <el-tab-pane label=\"静态属性\" name=\"only\">\n                    <el-button type=\"primary\" size=\"mini\" :disabled=\"selectedCateKeys.length!==3\" @click=\"addDialogVisible = true\">添加属性</el-button>\n                    <!-- 静态属性列表 -->\n                    <el-table :data=\"onlyTableData\" style=\"width: 100%\" border stripe>\n                        <el-table-column type=\"expand\">\n                            <template slot-scope=\"scope\">\n                                <el-tag v-for=\"(v, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(scope.row, i)\">{{v}}</el-tag>\n                                <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\" v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\" @blur=\"handleInputConfirm(scope.row)\">\n                                </el-input>\n                                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\n                            </template>\n                        </el-table-column>\n                        <el-table-column type=\"index\" label=\"#\"></el-table-column>\n                        <el-table-column  prop=\"attr_name\" label=\"属性名称\"></el-table-column>\n                        <el-table-column label=\"操作\">\n                            <template slot-scope=\"scope\">\n                                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\n                                <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n\n        <!-- 添加参数对话框 -->\n        <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n                <el-form-item :label=\"titleText\" prop=\"attr_name\">\n                    <el-input v-model=\"addForm.attr_name\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n        <!-- 编辑参数对话框 -->\n        <el-dialog :title=\"'编辑' + titleText\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n                <el-form-item :label=\"titleText\" prop=\"attr_name\">\n                    <el-input v-model=\"editForm.attr_name\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            cateList: [],\n            selectedCateKeys: [],\n            cateProps: {\n                expandTrigger: 'hover',\n                value: 'cat_id',\n                label: 'cat_name',\n                children: 'children'\n            },\n            // 被激活的标签页名\n            activeName: 'many',\n            // 动态参数数据\n            manyTableData: [],\n            // 静态属性数据\n            onlyTableData: [],\n            // 是否展示添加参数对话框\n            addDialogVisible: false,\n            // 添加参数对话框数据\n            addForm: {\n                attr_name: ''\n            },\n            // 添加参数对话框验证规则\n            addFormRules: {\n                attr_name: [\n                    { required: true, message: '请输入参数名称', trigger: 'blur' }\n                ]\n            },\n            // 是否展示编辑参数对话框\n            editDialogVisible: false,\n            // 编辑参数对话框数据\n            editForm: {\n                attr_name: ''\n            },\n            // 编辑参数对话框验证规则\n            editFormRules: {\n                attr_name: [\n                    { required: true, message: '请输入参数名称', trigger: 'blur' }\n                ]\n            }\n        }\n    },\n    created() {\n        this.getCateList()\n    },\n    methods: {\n        // 获取分类数据\n        async getCateList() {\n            const { data: res } = await this.$http.get('categories', { params: { type: 3 } })\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.$message.success('获取商品分类成功')\n            this.cateList = res.data\n        },\n        // 获取参数列表数据\n        async getParamsData() {\n            const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`, { params: { sel: this.activeName } })\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.$message.success('获取参数列表成功')\n            // 将 attr_vals 转换为数组\n            res.data.forEach(item => {\n                item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\n                item.inputVisible = false\n                item.inputValue = ''\n            });\n            if (this.activeName === 'many') this.manyTableData = res.data\n            this.onlyTableData = res.data\n        },\n        // 分类改变\n        handleChange() {\n            if (this.selectedCateKeys.length !== 3) {\n                this.selectedCateKeys = []\n                this.manyTableData = []\n                this.onlyTableData = []\n                return\n            }\n            console.log('change: ', this.selectedCateKeys);\n\n            this.getParamsData()\n        },\n        // 点击标签页\n        handleTabClick() {\n            if (this.selectedCateKeys.length === 3) this.getParamsData()\n        },\n        // 关闭添加参数对话框\n        addDialogClosed() {\n            this.$refs.addFormRef.resetFields()\n        },\n        // 添加商品参数\n        addParams() {\n            // 验证表单\n            this.$refs.addFormRef.validate(async valid => {\n                if (!valid) return this.$message.error('请填写正确的参数名称')\n\n                const { data: res } = await this.$http.post(`categories/${this.cateId}/attributes`, { \n                    attr_name: this.addForm.attr_name,\n                    attr_sel: this.activeName\n                 })\n                if (res.meta.status !== 201) return this.$message.error(res.meta.msg)\n                this.$message.success(`添加${this.titleText}成功`)\n                this.addDialogVisible = false\n                this.getParamsData()\n            })\n        },\n        // 展示编辑参数对话框\n        async showEditDialog(attrId) {\n            const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes/${attrId}`, { params: { attr_sel: this.activeName } })\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.$message.success(`获取${this.titleText}成功`)\n            this.editForm = res.data\n            this.editDialogVisible = true\n        },\n        // 关闭编辑参数对话框\n        editDialogClosed() {\n            this.$refs.editFormRef.resetFields()\n        },\n        // 编辑商品参数\n        editParams() {\n            // 验证表单\n            this.$refs.editFormRef.validate(async valid => {\n                if (!valid) return this.$message.error('请填写正确的参数名称')\n\n                const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${this.editForm.attr_id}`, { \n                    attr_name: this.editForm.attr_name,\n                    attr_sel: this.activeName\n                 })\n                if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n                this.$message.success(`添加${this.titleText}成功`)\n                this.editDialogVisible = false\n                this.getParamsData()\n            })\n        },\n        // 删除商品参数\n        async removeParams(attrId) {\n            const confirm = await this.$confirm(`此操作将永久删除该${this.titleText}, 是否继续?`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(e => e);\n\n            // 如果用户确认删除，则返回值为字符串 confirm；如果用户取消了删除，则返回值为字符串 cancel\n            console.log('confirm: ', confirm);\n            if (confirm !== 'confirm') return\n\n            const { data: res } = await this.$http.delete(`categories/${this.cateId}/attributes/${attrId}`)\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.$message.success(`删除${this.titleText}成功`)\n            this.getParamsData()\n        },\n        // 保存参数可选项\n        async saveAttrVals(row, attrVals, isAdd) {\n            const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`, { \n                attr_name: row.attr_name,\n                attr_sel: this.activeName,\n                attr_vals: attrVals\n            })\n            if (res.meta.status !== 200) return this.$message.error(res.meta.msg)\n            this.$message.success(`${isAdd ? '添加' : '删除'}${this.titleText}可选项成功`)\n            this.getParamsData()\n        },\n        // 删除参数可选项\n        handleClose(row, i) {\n            // 删除元素\n            const attrVals = [...row.attr_vals.slice(0, i), ...row.attr_vals.slice(i + 1)].join(' ')\n            console.log('attrVals: ', attrVals, '\\ni: ', i);\n            this.saveAttrVals(row, attrVals, false)\n        },\n        // 展示添加参数可选项输入框\n        showInput(row) {\n            row.inputVisible = true\n            // 让文本框自动获得焦点\n            // $nextTick 方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\n            this.$nextTick(_ => {\n                this.$refs.saveTagInput.$refs.input.focus();\n            });\n        },\n        // \n        handleInputConfirm(row) {\n            if (row.inputValue.trim().length === 0) {\n                row.inputVisible = false\n                row.inputValue = ''\n                return\n            }\n\n            // 添加元素\n            const attrVals = row.attr_vals.concat(row.inputValue.trim()).join(' ')\n            console.log('attrVals: ', attrVals);\n            this.saveAttrVals(row, attrVals, true)\n        }\n    },\n    // 计算属性\n    computed: {\n        // 选中的分类id\n        cateId() {\n            if (this.selectedCateKeys.length === 3) return this.selectedCateKeys[2]\n            return null\n        },\n        // 动态计算标题的文本\n        titleText() {\n            if (this.activeName === 'many') {\n                return '动态参数'\n            }\n            return '静态属性'\n        }\n    }\n}\n</script>\n\n<style scoped>\n.cat_opt {\n    margin: 15px 0;\n}\n\n.el-tag, .button-new-tag {\n  margin: 10px;\n}\n\n.input-new-tag {\n  width: 120px;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=71bf8a39&scoped=true\"\nimport script from \"./Params.vue?vue&type=script&lang=js\"\nexport * from \"./Params.vue?vue&type=script&lang=js\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=71bf8a39&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"71bf8a39\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","showAddCateDialog","staticClass","catelist","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","$event","removeCateById","cat_id","queryInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","addCateDialogClosed","ref","addCateForm","addCateFormRules","model","value","cat_name","callback","$$v","$set","expression","parentCateList","cascaderProps","parentCateChange","selectedKeys","slot","addCate","staticRenderFns","data","type","label","prop","template","cat_pid","required","message","trigger","expandTrigger","checkStrictly","children","created","getCateList","methods","res","$http","get","params","meta","status","$message","error","msg","result","success","size","maxN","parseInt","page","$refs","addCateFormRef","resetFields","addFormRef","validate","valid","post","v","length","uid","confirm","$confirm","confirmButtonText","cancelButtonText","catch","e","delete","component","cateList","cateProps","handleChange","selectedCateKeys","handleTabClick","activeName","addDialogVisible","manyTableData","_l","attr_vals","i","handleClose","_s","inputVisible","handleInputConfirm","nativeOn","indexOf","_k","keyCode","inputValue","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","attr_name","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","getParamsData","cateId","sel","forEach","item","split","attr_sel","attrId","editFormRef","put","saveAttrVals","attrVals","isAdd","slice","join","$nextTick","_","saveTagInput","input","focus","trim","concat","computed"],"sourceRoot":""}